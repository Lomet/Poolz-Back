{
  "contractName": "InvestorData",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "RemoveERC20Maincoin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetPozTimer",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "GetPoolStatus",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fee",
          "type": "uint16"
        }
      ],
      "name": "SetPOZFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetPOZFee",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "ERC20MainCoins",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetFee",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "GetTestPoolStatus",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolsMap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_MinPoz",
          "type": "uint256"
        }
      ],
      "name": "SetMinPoz",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetIsPayble",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetMyPoolsId",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "GetMorePoolData",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolsCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "WithdrawETHFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetMinPoz",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "AddERC20Maincoin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "SwitchIsPayble",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "name": "Token",
          "type": "address"
        },
        {
          "name": "Creator",
          "type": "address"
        },
        {
          "name": "FinishTime",
          "type": "uint256"
        },
        {
          "name": "Rate",
          "type": "uint256"
        },
        {
          "name": "POZRate",
          "type": "uint256"
        },
        {
          "name": "Maincoin",
          "type": "address"
        },
        {
          "name": "StartAmount",
          "type": "uint256"
        },
        {
          "name": "IsLocked",
          "type": "bool"
        },
        {
          "name": "Lefttokens",
          "type": "uint256"
        },
        {
          "name": "StartTime",
          "type": "uint256"
        },
        {
          "name": "OpenForAll",
          "type": "uint256"
        },
        {
          "name": "UnlockedTokens",
          "type": "uint256"
        },
        {
          "name": "TookLeftOvers",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_PoolId",
          "type": "uint256"
        },
        {
          "name": "_Amount",
          "type": "uint256"
        }
      ],
      "name": "InvestERC20",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetLastPoolId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_MinETH",
          "type": "uint256"
        }
      ],
      "name": "SetMinETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pozTimer",
          "type": "uint16"
        }
      ],
      "name": "SetPozTimer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetMinDuration",
      "outputs": [
        {
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "IsERC20Maincoin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "GetPoolData",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minDuration",
          "type": "uint16"
        }
      ],
      "name": "SetMinDuration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_PoolId",
          "type": "uint256"
        }
      ],
      "name": "InvestETH",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetMinETH",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fee",
          "type": "uint16"
        }
      ],
      "name": "SetFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_Token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "WithdrawERC20Fee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_PoolId",
          "type": "uint256"
        }
      ],
      "name": "WithdrawLeftOvers",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_Token",
          "type": "address"
        },
        {
          "name": "_FinishTime",
          "type": "uint256"
        },
        {
          "name": "_Rate",
          "type": "uint256"
        },
        {
          "name": "_POZRate",
          "type": "uint256"
        },
        {
          "name": "_StartAmount",
          "type": "uint256"
        },
        {
          "name": "_IsLocked",
          "type": "bool"
        },
        {
          "name": "_MainCoin",
          "type": "address"
        }
      ],
      "name": "CreatePool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "NewPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "FinishPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "Token",
          "type": "address"
        }
      ],
      "name": "MainCoinAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "Token",
          "type": "address"
        }
      ],
      "name": "MainCoinRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "Amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "To",
          "type": "address"
        }
      ],
      "name": "TransferOutETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "Amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "From",
          "type": "address"
        }
      ],
      "name": "TransferInETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "Amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "To",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "Token",
          "type": "address"
        }
      ],
      "name": "TransferOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "Amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "From",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "Token",
          "type": "address"
        }
      ],
      "name": "TransferIn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "WithdrawInvestment",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetMyInvestmentIds",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"RemoveERC20Maincoin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetPozTimer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"GetPoolStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint16\"}],\"name\":\"SetPOZFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetPOZFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ERC20MainCoins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"GetTestPoolStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolsMap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_MinPoz\",\"type\":\"uint256\"}],\"name\":\"SetMinPoz\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetIsPayble\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetMyPoolsId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"GetMorePoolData\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"WithdrawInvestment\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"poolsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetMyInvestmentIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"WithdrawETHFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetMinPoz\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"AddERC20Maincoin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"SwitchIsPayble\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"name\":\"Token\",\"type\":\"address\"},{\"name\":\"Creator\",\"type\":\"address\"},{\"name\":\"FinishTime\",\"type\":\"uint256\"},{\"name\":\"Rate\",\"type\":\"uint256\"},{\"name\":\"POZRate\",\"type\":\"uint256\"},{\"name\":\"Maincoin\",\"type\":\"address\"},{\"name\":\"StartAmount\",\"type\":\"uint256\"},{\"name\":\"IsLocked\",\"type\":\"bool\"},{\"name\":\"Lefttokens\",\"type\":\"uint256\"},{\"name\":\"StartTime\",\"type\":\"uint256\"},{\"name\":\"OpenForAll\",\"type\":\"uint256\"},{\"name\":\"UnlockedTokens\",\"type\":\"uint256\"},{\"name\":\"TookLeftOvers\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_PoolId\",\"type\":\"uint256\"},{\"name\":\"_Amount\",\"type\":\"uint256\"}],\"name\":\"InvestERC20\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetLastPoolId\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_MinETH\",\"type\":\"uint256\"}],\"name\":\"SetMinETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pozTimer\",\"type\":\"uint16\"}],\"name\":\"SetPozTimer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetMinDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"IsERC20Maincoin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"GetPoolData\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_minDuration\",\"type\":\"uint16\"}],\"name\":\"SetMinDuration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_PoolId\",\"type\":\"uint256\"}],\"name\":\"InvestETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetMinETH\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint16\"}],\"name\":\"SetFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_Token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"WithdrawERC20Fee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_PoolId\",\"type\":\"uint256\"}],\"name\":\"WithdrawLeftOvers\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_Token\",\"type\":\"address\"},{\"name\":\"_FinishTime\",\"type\":\"uint256\"},{\"name\":\"_Rate\",\"type\":\"uint256\"},{\"name\":\"_POZRate\",\"type\":\"uint256\"},{\"name\":\"_StartAmount\",\"type\":\"uint256\"},{\"name\":\"_IsLocked\",\"type\":\"bool\"},{\"name\":\"_MainCoin\",\"type\":\"address\"}],\"name\":\"CreatePool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"NewPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"FinishPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Token\",\"type\":\"address\"}],\"name\":\"MainCoinAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Token\",\"type\":\"address\"}],\"name\":\"MainCoinRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"To\",\"type\":\"address\"}],\"name\":\"TransferOutETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"From\",\"type\":\"address\"}],\"name\":\"TransferInETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"To\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Token\",\"type\":\"address\"}],\"name\":\"TransferOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"From\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"Token\",\"type\":\"address\"}],\"name\":\"TransferIn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Administrator/Desktop/Code/Poolz/contracts/InvestorData.sol\":\"InvestorData\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Administrator/Desktop/Code/Poolz/contracts/ERC20Helper.sol\":{\"keccak256\":\"0x494961c8c3c2935d038437bd4af2e6260a77ea4ea370b4a41548d27065f00ae7\",\"urls\":[\"bzzr://5f29709f348271dac0f00446e1cff34029e027829a764aa5328f2e08cca28202\"]},\"/C/Users/Administrator/Desktop/Code/Poolz/contracts/ETHHelper.sol\":{\"keccak256\":\"0xa816ee2f5741dfb36d49a1236ad1035b8b9ce7bae8f1d2ddf11e0c2121b4c0df\",\"urls\":[\"bzzr://d398261184689b68fa488a4ddb834e5e4a3ee8f7c022ec8d9acb79e95c07da6d\"]},\"/C/Users/Administrator/Desktop/Code/Poolz/contracts/IPozBenefit.sol\":{\"keccak256\":\"0x71e74e571b21a9398237a262d0d178e25cd1933b4424bd20983c0adaf18c5155\",\"urls\":[\"bzzr://d1d21b01c4908413f010e2c77d8fef602999c89323de355084c9edb5276dee46\"]},\"/C/Users/Administrator/Desktop/Code/Poolz/contracts/Invest.sol\":{\"keccak256\":\"0xeb982d3955a51e0cf25e1134bd3cf65d980450cf3816b9c026852f0ef85cdbb9\",\"urls\":[\"bzzr://c95d4a2aea0edc2549efebdad09701e05df1323f3c7869b435bff68fe36a63d7\"]},\"/C/Users/Administrator/Desktop/Code/Poolz/contracts/InvestorData.sol\":{\"keccak256\":\"0x51f8d9fc065b92cabf1ee9c62436361a752fe6c7b9ad5a300b18f2abb4eb92b5\",\"urls\":[\"bzzr://90c5416c297dcfa86b8568e6cd7c18a5e6e2a56e0bab889c8e51d9b084573824\"]},\"/C/Users/Administrator/Desktop/Code/Poolz/contracts/MainCoinManager.sol\":{\"keccak256\":\"0xbaae53e1752d65370357e23e3a1353a4f7ad730365a1b422c3380e5a677b7686\",\"urls\":[\"bzzr://ca6bdf63f2683d65522069bf7b1d35e38184aa794ff64cd61680c4db014381e3\"]},\"/C/Users/Administrator/Desktop/Code/Poolz/contracts/Managable.sol\":{\"keccak256\":\"0x6ecba1f751859d1fe13734725dcfdbe5bd9e3a6dc3d33ae17c9b73110c524c76\",\"urls\":[\"bzzr://ed974d286b56437250da7e1d40125a8e52912824b5f4838c76a48404a5add378\"]},\"/C/Users/Administrator/Desktop/Code/Poolz/contracts/Pools.sol\":{\"keccak256\":\"0x9ad9c0d5c4c39c353bbee36da28caefc3595df746538d5e42065ead0fc0d0c1e\",\"urls\":[\"bzzr://5196952c97fdc784b01d6cceed738d1f8a829f0c1e8cc1161397c2125fd1bcee\"]},\"/C/Users/Administrator/Desktop/Code/Poolz/contracts/PoolsData.sol\":{\"keccak256\":\"0xd7fbba73e604c441bdf4b2519044c9094ceec940ff3ab2773936bb1b66371dc0\",\"urls\":[\"bzzr://b5af7068b560d4b9dd3c9d0ac51718ba9bc3b69d3ea9b0d35c3b5b0c2e9238ac\"]},\"/C/Users/Administrator/Desktop/Code/Poolz/contracts/PozBenefit.sol\":{\"keccak256\":\"0xe3d3e62c48c91dd8457577cd02a6b0cb54036bb63410cd69790f61ae7446d690\",\"urls\":[\"bzzr://c59522ca50ab32012938deba82e63245c9bc8879c4e97014fcbef27ed695487b\"]},\"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xc7e4c07a9b6ec87a56d4725c53bea9853ebdb36b50e233346da1c19a29f5fcc9\",\"urls\":[\"bzzr://00c60a2ceaeaea22950f100de0da8af10de31f66db76604b3b70c47f883eb570\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]}},\"version\":1}",
  "bytecode": "0x608060405260008060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600f600060156101000a81548161ffff021916908361ffff1602179055506103e8600060176101000a81548161ffff021916908361ffff16021790555060506001819055506000600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260146101000a81548160ff0219169083151502179055506127106003819055506014600560006101000a81548161ffff021916908361ffff1602179055506000600560026101000a81548161ffff021916908361ffff16021790555060006007819055506000600a81905550614d7d806101646000396000f3006080604052600436106101f8576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062ea921614610215578063014f3aff146102585780630d08caa01461028b57806311fad209146102da5780631ac8989f1461030b5780633037548a1461033e5780633f4ba83a1461039957806348d9614d146103b057806349e42f10146103e357806356793bc7146104395780635c975abb1461049a5780635ea84ad6146104c9578063624dea1c146104f657806363552a491461052557806366b91da914610591578063715018a6146106175780638456cb591461062e57806387e3c599146106455780638c788de01461068a5780638da5cb5b146106b557806391314dde1461070c578063991e979a146107785780639baf390a146107bb578063a38c6549146107e6578063aac5da5c14610829578063ac4afa3814610840578063be33a3ec14610961578063c5053add1461098b578063cbf476e5146109b6578063e05425e4146109e3578063e4dc37bb14610a14578063e890671614610a47578063ea9223a614610aa2578063ecf1a2c914610b73578063f04be48b14610ba4578063f155e88e14610bc4578063f2fde38b14610bef578063f8d5c26b14610c32578063fc1a86ff14610c63578063fd711a5514610cc6578063ff02c51314610d0b575b600260149054906101000a900460ff16151561021357600080fd5b005b34801561022157600080fd5b50610256600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da2565b005b34801561026457600080fd5b5061026d610ebb565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561029757600080fd5b506102b660048036038101908080359060200190929190505050610ed2565b604051808260048111156102c657fe5b60ff16815260200191505060405180910390f35b3480156102e657600080fd5b50610309600480360381019080803561ffff1690602001909291905050506112d0565b005b34801561031757600080fd5b50610320611465565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561034a57600080fd5b5061037f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061147c565b604051808215151515815260200191505060405180910390f35b3480156103a557600080fd5b506103ae61149c565b005b3480156103bc57600080fd5b506103c561155a565b604051808261ffff1661ffff16815260200191505060405180910390f35b3480156103ef57600080fd5b5061040e60048036038101908080359060200190929190505050611572565b6040518083600481111561041e57fe5b60ff1681526020018281526020019250505060405180910390f35b34801561044557600080fd5b50610484600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506119ad565b6040518082815260200191505060405180910390f35b3480156104a657600080fd5b506104af6119dd565b604051808215151515815260200191505060405180910390f35b3480156104d557600080fd5b506104f4600480360381019080803590602001909291905050506119f0565b005b34801561050257600080fd5b5061050b611a55565b604051808215151515815260200191505060405180910390f35b34801561053157600080fd5b5061053a611a6c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561057d578082015181840152602081019050610562565b505050509050019250505060405180910390f35b34801561059d57600080fd5b506105bc60048036038101908080359060200190929190505050611b01565b60405180851515151581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b34801561062357600080fd5b5061062c611b9f565b005b34801561063a57600080fd5b50610643611ca1565b005b34801561065157600080fd5b5061067060048036038101908080359060200190929190505050611d61565b604051808215151515815260200191505060405180910390f35b34801561069657600080fd5b5061069f611ea2565b6040518082815260200191505060405180910390f35b3480156106c157600080fd5b506106ca611ea8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561071857600080fd5b50610721611ecd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610764578082015181840152602081019050610749565b505050509050019250505060405180910390f35b34801561078457600080fd5b506107b9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f62565b005b3480156107c757600080fd5b506107d061201e565b6040518082815260200191505060405180910390f35b3480156107f257600080fd5b50610827600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612028565b005b34801561083557600080fd5b5061083e612141565b005b34801561084c57600080fd5b5061086b600480360381019080803590602001909291905050506121c8565b604051808e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018c81526020018b81526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200187151515158152602001868152602001858152602001848152602001838152602001821515151581526020019d505050505050505050505050505060405180910390f35b61098960048036038101908080359060200190929190803590602001909291905050506122a8565b005b34801561099757600080fd5b506109a0612d71565b6040518082815260200191505060405180910390f35b3480156109c257600080fd5b506109e160048036038101908080359060200190929190505050612d7b565b005b3480156109ef57600080fd5b50610a12600480360381019080803561ffff169060200190929190505050612de0565b005b348015610a2057600080fd5b50610a29612ede565b604051808261ffff1661ffff16815260200191505060405180910390f35b348015610a5357600080fd5b50610a88600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ef6565b604051808215151515815260200191505060405180910390f35b348015610aae57600080fd5b50610acd60048036038101908080359060200190929190505050612f4c565b60405180886004811115610add57fe5b60ff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200197505050505050505060405180910390f35b348015610b7f57600080fd5b50610ba2600480360381019080803561ffff1690602001909291905050506130bc565b005b610bc260048036038101908080359060200190929190505050613137565b005b348015610bd057600080fd5b50610bd96139cd565b6040518082815260200191505060405180910390f35b348015610bfb57600080fd5b50610c30600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506139d7565b005b348015610c3e57600080fd5b50610c61600480360381019080803561ffff169060200190929190505050613a3e565b005b348015610c6f57600080fd5b50610cc4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613ab9565b005b348015610cd257600080fd5b50610cf160048036038101908080359060200190929190505050613c7b565b604051808215151515815260200191505060405180910390f35b348015610d1757600080fd5b50610da0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803515159060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613dba565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dfd57600080fd5b7f46e7a65ed7662dc42b119afa3a03fc8474ed27a5a48d664c0b5e8b87b04184cf81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060179054906101000a900461ffff16905090565b600060075482101515610f4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f57726f6e6720706f6f6c2069640000000000000000000000000000000000000081525060200191505060405180910390fd5b60086000838152602001908152602001600020600a015442108015610f88575060006008600084815260200190815260200160002060080154115b15610f9657600090506112cb565b60086000838152602001908152602001600020600a01544210158015610fd2575060006008600084815260200190815260200160002060080154115b8015610ff35750600860008381526020019081526020016000206002015442105b1561100157600190506112cb565b6000600860008481526020019081526020016000206008015414801561104757506008600083815260200190815260200160002060070160009054906101000a900460ff165b80156110685750600860008381526020019081526020016000206002015442105b1561107657600290506112cb565b600060086000848152602001908152602001600020600801541480156110bd57506008600083815260200190815260200160002060070160009054906101000a900460ff16155b156110cb57600490506112cb565b6000600860008481526020019081526020016000206008015411801561111257506008600083815260200190815260200160002060070160009054906101000a900460ff16155b801561113f575060086000838152602001908152602001600020600c0160009054906101000a900460ff16155b1561114d57600390506112cb565b6008600083815260200190815260200160002060020154421015801561119457506008600083815260200190815260200160002060070160009054906101000a900460ff16155b156111d45760086000838152602001908152602001600020600c0160009054906101000a900460ff16156111cb57600490506112cb565b600390506112cb565b6008600083815260200190815260200160002060020154421015801561121a57506008600083815260200190815260200160002060070160009054906101000a900460ff165b156112ca5760086000838152602001908152602001600020600c0160009054906101000a900460ff1680611264575060006008600084815260200190815260200160002060080154145b80156112b357506008600083815260200190815260200160002060060154600860008481526020019081526020016000206008015460086000858152602001908152602001600020600b015401145b156112c157600490506112cb565b600390506112cb565b5b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561132b57600080fd5b806127108161ffff1610156113f35781600560009054906101000a900461ffff168061ffff168261ffff16111561137e5783600060156101000a81548161ffff021916908361ffff1602179055506113ec565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e6f74206269676765720000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050611461565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f7420696e2072616e6765000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b60008060159054906101000a900461ffff16905090565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114f757600080fd5b600060149054906101000a900460ff16151561151257600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600560009054906101000a900461ffff16905090565b600080600754831015156115ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f57726f6e6720706f6f6c2069640000000000000000000000000000000000000081525060200191505060405180910390fd5b60086000848152602001908152602001600020600a015442108015611629575060006008600085815260200190815260200160002060080154115b1561163d57600080809050915091506119a8565b60086000848152602001908152602001600020600a01544210158015611679575060006008600085815260200190815260200160002060080154115b801561169a5750600860008481526020019081526020016000206002015442105b156116ae57600180809050915091506119a8565b600060086000858152602001908152602001600020600801541480156116f457506008600084815260200190815260200160002060070160009054906101000a900460ff165b80156117155750600860008481526020019081526020016000206002015442105b1561172957600280809050915091506119a8565b6000600860008581526020019081526020016000206008015414801561177057506008600084815260200190815260200160002060070160009054906101000a900460ff16155b156117855760046003809050915091506119a8565b600060086000858152602001908152602001600020600801541180156117cc57506008600084815260200190815260200160002060070160009054906101000a900460ff16155b80156117f9575060086000848152602001908152602001600020600c0160009054906101000a900460ff16155b1561180e5760036004809050915091506119a8565b6008600084815260200190815260200160002060020154421015801561185557506008600084815260200190815260200160002060070160009054906101000a900460ff16155b156118a35760086000848152602001908152602001600020600c0160009054906101000a900460ff16156118935760046005809050915091506119a8565b60036006809050915091506119a8565b600860008481526020019081526020016000206002015442101580156118e957506008600084815260200190815260200160002060070160009054906101000a900460ff165b156119a75760086000848152602001908152602001600020600c0160009054906101000a900460ff1680611933575060006008600085815260200190815260200160002060080154145b801561198257506008600084815260200190815260200160002060060154600860008581526020019081526020016000206008015460086000868152602001908152602001600020600b015401145b156119975760046007809050915091506119a8565b60036008809050915091506119a8565b5b915091565b6009602052816000526040600020818154811015156119c857fe5b90600052602060002001600091509150505481565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a4b57600080fd5b8060018190555050565b6000600260149054906101000a900460ff16905090565b6060600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611af757602002820191906000526020600020905b815481526020019060010190808311611ae3575b5050505050905090565b6000806000806008600086815260200190815260200160002060070160009054906101000a900460ff16600860008781526020019081526020016000206002015460086000888152602001908152602001600020600a01546008600089815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693509350935093509193509193565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611bfa57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cfc57600080fd5b600060149054906101000a900460ff16151515611d1857600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000600a548211158015611d8b57506000600b600084815260200190815260200160002060040154115b8015611dcb575060036004811115611d9f57fe5b611dbe600b600085815260200190815260200160002060000154610ed2565b6004811115611dc957fe5b145b15611e9857611e7360086000600b600086815260200190815260200160002060000154815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b600086815260200190815260200160002060040154614325565b6000600b60008481526020019081526020016000206004018190555060019050611e9d565b600090505b919050565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611f5857602002820191906000526020600020905b815481526020019060010190808311611f44575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fbd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561201a573d6000803e3d6000fd5b5050565b6000600154905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561208357600080fd5b7f8b732648ec6304b6125c30b24aa7c51736b4c10b079067109e27cbb1e2e9052581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561219c57600080fd5b600260149054906101000a900460ff1615600260146101000a81548160ff021916908315150217905550565b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060154908060070160009054906101000a900460ff169080600801549080600901549080600a01549080600b01549080600c0160009054906101000a900460ff1690508d565b6000806000806000806007548810151561232a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f57726f6e6720706f6f6c2069640000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860008a815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515612405576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f506f6f6c20697320666f72204554482c2075736520496e76657445544800000081525060200191505060405180910390fd5b6127108711151561247e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4e65656420696e76657374206d6f7265207468656e203130303030000000000081525060200191505060405180910390fd5b6124bf600860008a815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633896144a8565b60c0604051908101604052808981526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018881526020016124fc336147ea565b151581526020016000815260200142815250600b6000600a5481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055506080820151816004015560a08201518160050155905050600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a549080600181540180825580915050906001820390600052602060002001600090919290919091505550600a6000815480929190600101919050555061265287600860008b815260200190815260200160002060040154614983565b955061267487600860008b815260200190815260200160002060030154614983565b94506000600481111561268357fe5b61268c89610ed2565b600481111561269757fe5b1480156126a957506126a8336147ea565b5b80156126cb575060086000898152602001908152602001600020600801548611155b156129c0576126f0600860008a81526020019081526020016000206008015487614999565b600860008a8152602001908152602001600020600801819055506008600089815260200190815260200160002060070160009054906101000a900460ff161561277c57612758600b60006001600a5403815260200190815260200160002060040154876149b2565b600b60006001600a54038152602001908152602001600020600401819055506127be565b6127bd600860008a815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163388614325565b5b6127e76127cd34612710614983565b600060159054906101000a900461ffff1661ffff166149ce565b93506127f38785614999565b925061287460046000600860008c815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054856149b2565b60046000600860008c815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612964600860008a815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860008b815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685614325565b6000600860008a81526020019081526020016000206008015414156129bb577f5aa793a17b0774b891ce2b0dd5dbe8f04132e547df384ab1053d32470050b5fa886040518082815260200191505060405180910390a15b612d67565b600160048111156129cd57fe5b6129d689610ed2565b60048111156129e157fe5b148015612a04575060086000898152602001908152602001600020600801548511155b15612cf957612a29600860008a81526020019081526020016000206008015486614999565b600860008a8152602001908152602001600020600801819055506008600089815260200190815260200160002060070160009054906101000a900460ff1615612ab557612a91600b60006001600a5403815260200190815260200160002060040154866149b2565b600b60006001600a5403815260200190815260200160002060040181905550612af7565b612af6600860008a815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163387614325565b5b612b20612b0634612710614983565b600560009054906101000a900461ffff1661ffff166149ce565b9150612b2c8783614999565b9050612bad60046000600860008c815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836149b2565b60046000600860008c815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612c9d600860008a815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860008b815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683614325565b6000600860008a8152602001908152602001600020600801541415612cf4577f5aa793a17b0774b891ce2b0dd5dbe8f04132e547df384ab1053d32470050b5fa886040518082815260200191505060405180910390a15b612d67565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e766573746d656e74206e6f7420636f6d706c69746564000000000000000081525060200191505060405180910390fd5b5050505050505050565b6000600754905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612dd657600080fd5b8060038190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612e3b57600080fd5b806127108161ffff161015612e6c5781600060176101000a81548161ffff021916908361ffff160217905550612eda565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f7420696e2072616e6765000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b6000600560009054906101000a900461ffff16905090565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600080600080600080600060075488101515612fd0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f57726f6e6720496400000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b612fd988610ed2565b600860008a815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860008b815260200190815260200160002060030154600860008c815260200190815260200160002060040154600860008d815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860008e815260200190815260200160002060060154600860008f8152602001908152602001600020600801549650965096509650965096509650919395979092949650565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561311757600080fd5b80600560026101000a81548161ffff021916908361ffff16021790555050565b600080600080343360035482101515613956577f3a32cdd14cdfd431946dfa0b2aef5ace661340411aaadcaee6aef6738d3023268282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16007548710151561322e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f57726f6e6720706f6f6c2069640000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166008600089815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f506f6f6c206973206e6f7420666f72204554480000000000000000000000000081525060200191505060405180910390fd5b60c0604051908101604052808881526020013373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001613345336147ea565b151581526020016000815260200142815250600b6000600a5481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055506080820151816004015560a08201518160050155905050600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a549080600181540180825580915050906001820390600052602060002001600090919290919091505550613476600a5460016149b2565b600a8190555061349c34600860008a815260200190815260200160002060040154614983565b95506134be34600860008a815260200190815260200160002060030154614983565b9450600060048111156134cd57fe5b6134d688610ed2565b60048111156134e157fe5b1480156134f357506134f2336147ea565b5b8015613515575060086000888152602001908152602001600020600801548611155b156136da5761353a600860008981526020019081526020016000206008015487614999565b60086000898152602001908152602001600020600801819055506008600088815260200190815260200160002060070160009054906101000a900460ff16156135c6576135a2600b60006001600a5403815260200190815260200160002060040154876149b2565b600b60006001600a5403815260200190815260200160002060040181905550613608565b6136076008600089815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163388614325565b5b61363c61361734612710614983565b613637612710600060159054906101000a900461ffff1661ffff16614999565b6149ce565b935061367e6008600089815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685614a06565b6000600860008981526020019081526020016000206008015414156136d5577f5aa793a17b0774b891ce2b0dd5dbe8f04132e547df384ab1053d32470050b5fa876040518082815260200191505060405180910390a15b613951565b600160048111156136e757fe5b6136f088610ed2565b60048111156136fb57fe5b14801561371e575060086000888152602001908152602001600020600801548511155b156138e357613743600860008981526020019081526020016000206008015486614999565b60086000898152602001908152602001600020600801819055506008600088815260200190815260200160002060070160009054906101000a900460ff16156137cf576137ab600b60006001600a5403815260200190815260200160002060040154866149b2565b600b60006001600a5403815260200190815260200160002060040181905550613811565b6138106008600089815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163387614325565b5b61384561382034612710614983565b613840612710600560009054906101000a900461ffff1661ffff16614999565b6149ce565b92506138876008600089815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684614a06565b6000600860008981526020019081526020016000206008015414156138de577f5aa793a17b0774b891ce2b0dd5dbe8f04132e547df384ab1053d32470050b5fa876040518082815260200191505060405180910390a15b613951565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e766573746d656e74206e6f7420636f6d706c69746564000000000000000081525060200191505060405180910390fd5b6139c4565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f53656e642045544820746f20696e76657374000000000000000000000000000081525060200191505060405180910390fd5b50505050505050565b6000600354905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613a3257600080fd5b613a3b81614abc565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613a9957600080fd5b80600560006101000a81548161ffff021916908361ffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613b1457600080fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613bf657600080fd5b505af1158015613c0a573d6000803e3d6000fd5b505050506040513d6020811015613c2057600080fd5b8101908080519060200190929190505050506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600042600860008481526020019081526020016000206002015411158015613cb9575060006008600084815260200190815260200160002060080154115b8015613ce6575060086000838152602001908152602001600020600c0160009054906101000a900460ff16155b15613db057600160086000848152602001908152602001600020600c0160006101000a81548160ff021916908315150217905550613da76008600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008600086815260200190815260200160002060080154614325565b60019050613db5565b600090505b919050565b6000613dc588614bb6565b1515613e39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4e6565642056616c696420455243323020546f6b656e0000000000000000000081525060200191505060405180910390fd5b86613e5842600560029054906101000a900461ffff1661ffff166149b2565b11151515613ece576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4e656564206d6f7265207468656e204d696e4475726174696f6e00000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480613f0e5750613f0d82612ef6565b5b1515613f1957600080fd5b848610151515613fb7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001807f504f5a20686f6c64657273206e65656420746f2068617665206265747465722081526020017f286f72207468652073616d65203d206f6666292070726963650000000000000081525060400191505060405180910390fd5b613fc28833866144a8565b84861461400957614004613ffe613ff6613fdc8a42614999565b600060179054906101000a900461ffff1661ffff166149ce565b612710614983565b426149b2565b61400b565b425b90506101a0604051908101604052808973ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018415158152602001858152602001428152602001828152602001600081526020016000151581525060086000600754815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006015560e08201518160070160006101000a81548160ff0219169083151502179055506101008201518160080155610120820151816009015561014082015181600a015561016082015181600b015561018082015181600c0160006101000a81548160ff021916908315150217905550905050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060075490806001815401808255809150509060018203906000526020600020016000909192909190915055507fbe4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a3188600754604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a161431560075460016149b2565b6007819055505050505050505050565b7fe4d818e6f992efbd60db553f3edce819a199baec79a784b95c89bc8ee86f2584818385604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a18273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561446757600080fd5b505af115801561447b573d6000803e3d6000fd5b505050506040513d602081101561449157600080fd5b810190808051906020019092919050505050505050565b828282808373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801561457b57600080fd5b505af115801561458f573d6000803e3d6000fd5b505050506040513d60208110156145a557600080fd5b8101908080519060200190929190505050101515614774578573ffffffffffffffffffffffffffffffffffffffff166323b872dd8630876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561469457600080fd5b505af11580156146a8573d6000803e3d6000fd5b505050506040513d60208110156146be57600080fd5b8101908080519060200190929190505050507f1fecf4702e692891a7c2f0d328779b085efb5edd094fa5558bd5cd147a167922848688604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a16147e2565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4e6f20616c6c6f776e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561484b576001905061497e565b60015461487a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684614c71565b10158061497b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b217bb01836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561493f57600080fd5b505af1158015614953573d6000803e3d6000fd5b505050506040513d602081101561496957600080fd5b81019080805190602001909291905050505b90505b919050565b6000818381151561499057fe5b04905092915050565b60008282111515156149a757fe5b818303905092915050565b600081830190508281101515156149c557fe5b80905092915050565b6000808314156149e15760009050614a00565b81830290508183828115156149f257fe5b041415156149fc57fe5b8090505b92915050565b7feca5ae7bd9109b0f7d228f3f8a8cc834a1f995af62df6dc226dc3ab3f38dc7b38183604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a18173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015614ab7573d6000803e3d6000fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515614af857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808273ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614c1d57600080fd5b505af1158015614c31573d6000803e3d6000fd5b505050506040513d6020811015614c4757600080fd5b81019080805190602001909291905050501115614c675760019050614c6c565b600090505b919050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015614d0e57600080fd5b505af1158015614d22573d6000803e3d6000fd5b505050506040513d6020811015614d3857600080fd5b81019080805190602001909291905050509050929150505600a165627a7a72305820990d7265199c0799f8ddb10302c9401184f7a56b72d94de2f999bf6e6153d5b50029",
  "deployedBytecode": "0x6080604052600436106101f8576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062ea921614610215578063014f3aff146102585780630d08caa01461028b57806311fad209146102da5780631ac8989f1461030b5780633037548a1461033e5780633f4ba83a1461039957806348d9614d146103b057806349e42f10146103e357806356793bc7146104395780635c975abb1461049a5780635ea84ad6146104c9578063624dea1c146104f657806363552a491461052557806366b91da914610591578063715018a6146106175780638456cb591461062e57806387e3c599146106455780638c788de01461068a5780638da5cb5b146106b557806391314dde1461070c578063991e979a146107785780639baf390a146107bb578063a38c6549146107e6578063aac5da5c14610829578063ac4afa3814610840578063be33a3ec14610961578063c5053add1461098b578063cbf476e5146109b6578063e05425e4146109e3578063e4dc37bb14610a14578063e890671614610a47578063ea9223a614610aa2578063ecf1a2c914610b73578063f04be48b14610ba4578063f155e88e14610bc4578063f2fde38b14610bef578063f8d5c26b14610c32578063fc1a86ff14610c63578063fd711a5514610cc6578063ff02c51314610d0b575b600260149054906101000a900460ff16151561021357600080fd5b005b34801561022157600080fd5b50610256600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610da2565b005b34801561026457600080fd5b5061026d610ebb565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561029757600080fd5b506102b660048036038101908080359060200190929190505050610ed2565b604051808260048111156102c657fe5b60ff16815260200191505060405180910390f35b3480156102e657600080fd5b50610309600480360381019080803561ffff1690602001909291905050506112d0565b005b34801561031757600080fd5b50610320611465565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561034a57600080fd5b5061037f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061147c565b604051808215151515815260200191505060405180910390f35b3480156103a557600080fd5b506103ae61149c565b005b3480156103bc57600080fd5b506103c561155a565b604051808261ffff1661ffff16815260200191505060405180910390f35b3480156103ef57600080fd5b5061040e60048036038101908080359060200190929190505050611572565b6040518083600481111561041e57fe5b60ff1681526020018281526020019250505060405180910390f35b34801561044557600080fd5b50610484600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506119ad565b6040518082815260200191505060405180910390f35b3480156104a657600080fd5b506104af6119dd565b604051808215151515815260200191505060405180910390f35b3480156104d557600080fd5b506104f4600480360381019080803590602001909291905050506119f0565b005b34801561050257600080fd5b5061050b611a55565b604051808215151515815260200191505060405180910390f35b34801561053157600080fd5b5061053a611a6c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561057d578082015181840152602081019050610562565b505050509050019250505060405180910390f35b34801561059d57600080fd5b506105bc60048036038101908080359060200190929190505050611b01565b60405180851515151581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b34801561062357600080fd5b5061062c611b9f565b005b34801561063a57600080fd5b50610643611ca1565b005b34801561065157600080fd5b5061067060048036038101908080359060200190929190505050611d61565b604051808215151515815260200191505060405180910390f35b34801561069657600080fd5b5061069f611ea2565b6040518082815260200191505060405180910390f35b3480156106c157600080fd5b506106ca611ea8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561071857600080fd5b50610721611ecd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610764578082015181840152602081019050610749565b505050509050019250505060405180910390f35b34801561078457600080fd5b506107b9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f62565b005b3480156107c757600080fd5b506107d061201e565b6040518082815260200191505060405180910390f35b3480156107f257600080fd5b50610827600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612028565b005b34801561083557600080fd5b5061083e612141565b005b34801561084c57600080fd5b5061086b600480360381019080803590602001909291905050506121c8565b604051808e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018c81526020018b81526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188815260200187151515158152602001868152602001858152602001848152602001838152602001821515151581526020019d505050505050505050505050505060405180910390f35b61098960048036038101908080359060200190929190803590602001909291905050506122a8565b005b34801561099757600080fd5b506109a0612d71565b6040518082815260200191505060405180910390f35b3480156109c257600080fd5b506109e160048036038101908080359060200190929190505050612d7b565b005b3480156109ef57600080fd5b50610a12600480360381019080803561ffff169060200190929190505050612de0565b005b348015610a2057600080fd5b50610a29612ede565b604051808261ffff1661ffff16815260200191505060405180910390f35b348015610a5357600080fd5b50610a88600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ef6565b604051808215151515815260200191505060405180910390f35b348015610aae57600080fd5b50610acd60048036038101908080359060200190929190505050612f4c565b60405180886004811115610add57fe5b60ff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200197505050505050505060405180910390f35b348015610b7f57600080fd5b50610ba2600480360381019080803561ffff1690602001909291905050506130bc565b005b610bc260048036038101908080359060200190929190505050613137565b005b348015610bd057600080fd5b50610bd96139cd565b6040518082815260200191505060405180910390f35b348015610bfb57600080fd5b50610c30600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506139d7565b005b348015610c3e57600080fd5b50610c61600480360381019080803561ffff169060200190929190505050613a3e565b005b348015610c6f57600080fd5b50610cc4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613ab9565b005b348015610cd257600080fd5b50610cf160048036038101908080359060200190929190505050613c7b565b604051808215151515815260200191505060405180910390f35b348015610d1757600080fd5b50610da0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803515159060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613dba565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dfd57600080fd5b7f46e7a65ed7662dc42b119afa3a03fc8474ed27a5a48d664c0b5e8b87b04184cf81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060179054906101000a900461ffff16905090565b600060075482101515610f4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f57726f6e6720706f6f6c2069640000000000000000000000000000000000000081525060200191505060405180910390fd5b60086000838152602001908152602001600020600a015442108015610f88575060006008600084815260200190815260200160002060080154115b15610f9657600090506112cb565b60086000838152602001908152602001600020600a01544210158015610fd2575060006008600084815260200190815260200160002060080154115b8015610ff35750600860008381526020019081526020016000206002015442105b1561100157600190506112cb565b6000600860008481526020019081526020016000206008015414801561104757506008600083815260200190815260200160002060070160009054906101000a900460ff165b80156110685750600860008381526020019081526020016000206002015442105b1561107657600290506112cb565b600060086000848152602001908152602001600020600801541480156110bd57506008600083815260200190815260200160002060070160009054906101000a900460ff16155b156110cb57600490506112cb565b6000600860008481526020019081526020016000206008015411801561111257506008600083815260200190815260200160002060070160009054906101000a900460ff16155b801561113f575060086000838152602001908152602001600020600c0160009054906101000a900460ff16155b1561114d57600390506112cb565b6008600083815260200190815260200160002060020154421015801561119457506008600083815260200190815260200160002060070160009054906101000a900460ff16155b156111d45760086000838152602001908152602001600020600c0160009054906101000a900460ff16156111cb57600490506112cb565b600390506112cb565b6008600083815260200190815260200160002060020154421015801561121a57506008600083815260200190815260200160002060070160009054906101000a900460ff165b156112ca5760086000838152602001908152602001600020600c0160009054906101000a900460ff1680611264575060006008600084815260200190815260200160002060080154145b80156112b357506008600083815260200190815260200160002060060154600860008481526020019081526020016000206008015460086000858152602001908152602001600020600b015401145b156112c157600490506112cb565b600390506112cb565b5b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561132b57600080fd5b806127108161ffff1610156113f35781600560009054906101000a900461ffff168061ffff168261ffff16111561137e5783600060156101000a81548161ffff021916908361ffff1602179055506113ec565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4e6f74206269676765720000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050611461565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f7420696e2072616e6765000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b60008060159054906101000a900461ffff16905090565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114f757600080fd5b600060149054906101000a900460ff16151561151257600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600560009054906101000a900461ffff16905090565b600080600754831015156115ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f57726f6e6720706f6f6c2069640000000000000000000000000000000000000081525060200191505060405180910390fd5b60086000848152602001908152602001600020600a015442108015611629575060006008600085815260200190815260200160002060080154115b1561163d57600080809050915091506119a8565b60086000848152602001908152602001600020600a01544210158015611679575060006008600085815260200190815260200160002060080154115b801561169a5750600860008481526020019081526020016000206002015442105b156116ae57600180809050915091506119a8565b600060086000858152602001908152602001600020600801541480156116f457506008600084815260200190815260200160002060070160009054906101000a900460ff165b80156117155750600860008481526020019081526020016000206002015442105b1561172957600280809050915091506119a8565b6000600860008581526020019081526020016000206008015414801561177057506008600084815260200190815260200160002060070160009054906101000a900460ff16155b156117855760046003809050915091506119a8565b600060086000858152602001908152602001600020600801541180156117cc57506008600084815260200190815260200160002060070160009054906101000a900460ff16155b80156117f9575060086000848152602001908152602001600020600c0160009054906101000a900460ff16155b1561180e5760036004809050915091506119a8565b6008600084815260200190815260200160002060020154421015801561185557506008600084815260200190815260200160002060070160009054906101000a900460ff16155b156118a35760086000848152602001908152602001600020600c0160009054906101000a900460ff16156118935760046005809050915091506119a8565b60036006809050915091506119a8565b600860008481526020019081526020016000206002015442101580156118e957506008600084815260200190815260200160002060070160009054906101000a900460ff165b156119a75760086000848152602001908152602001600020600c0160009054906101000a900460ff1680611933575060006008600085815260200190815260200160002060080154145b801561198257506008600084815260200190815260200160002060060154600860008581526020019081526020016000206008015460086000868152602001908152602001600020600b015401145b156119975760046007809050915091506119a8565b60036008809050915091506119a8565b5b915091565b6009602052816000526040600020818154811015156119c857fe5b90600052602060002001600091509150505481565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a4b57600080fd5b8060018190555050565b6000600260149054906101000a900460ff16905090565b6060600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611af757602002820191906000526020600020905b815481526020019060010190808311611ae3575b5050505050905090565b6000806000806008600086815260200190815260200160002060070160009054906101000a900460ff16600860008781526020019081526020016000206002015460086000888152602001908152602001600020600a01546008600089815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693509350935093509193509193565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611bfa57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cfc57600080fd5b600060149054906101000a900460ff16151515611d1857600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000600a548211158015611d8b57506000600b600084815260200190815260200160002060040154115b8015611dcb575060036004811115611d9f57fe5b611dbe600b600085815260200190815260200160002060000154610ed2565b6004811115611dc957fe5b145b15611e9857611e7360086000600b600086815260200190815260200160002060000154815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b600086815260200190815260200160002060040154614325565b6000600b60008481526020019081526020016000206004018190555060019050611e9d565b600090505b919050565b60075481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611f5857602002820191906000526020600020905b815481526020019060010190808311611f44575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fbd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561201a573d6000803e3d6000fd5b5050565b6000600154905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561208357600080fd5b7f8b732648ec6304b6125c30b24aa7c51736b4c10b079067109e27cbb1e2e9052581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561219c57600080fd5b600260149054906101000a900460ff1615600260146101000a81548160ff021916908315150217905550565b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060154908060070160009054906101000a900460ff169080600801549080600901549080600a01549080600b01549080600c0160009054906101000a900460ff1690508d565b6000806000806000806007548810151561232a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f57726f6e6720706f6f6c2069640000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860008a815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515612405576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f506f6f6c20697320666f72204554482c2075736520496e76657445544800000081525060200191505060405180910390fd5b6127108711151561247e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4e65656420696e76657374206d6f7265207468656e203130303030000000000081525060200191505060405180910390fd5b6124bf600860008a815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633896144a8565b60c0604051908101604052808981526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018881526020016124fc336147ea565b151581526020016000815260200142815250600b6000600a5481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055506080820151816004015560a08201518160050155905050600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a549080600181540180825580915050906001820390600052602060002001600090919290919091505550600a6000815480929190600101919050555061265287600860008b815260200190815260200160002060040154614983565b955061267487600860008b815260200190815260200160002060030154614983565b94506000600481111561268357fe5b61268c89610ed2565b600481111561269757fe5b1480156126a957506126a8336147ea565b5b80156126cb575060086000898152602001908152602001600020600801548611155b156129c0576126f0600860008a81526020019081526020016000206008015487614999565b600860008a8152602001908152602001600020600801819055506008600089815260200190815260200160002060070160009054906101000a900460ff161561277c57612758600b60006001600a5403815260200190815260200160002060040154876149b2565b600b60006001600a54038152602001908152602001600020600401819055506127be565b6127bd600860008a815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163388614325565b5b6127e76127cd34612710614983565b600060159054906101000a900461ffff1661ffff166149ce565b93506127f38785614999565b925061287460046000600860008c815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054856149b2565b60046000600860008c815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612964600860008a815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860008b815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685614325565b6000600860008a81526020019081526020016000206008015414156129bb577f5aa793a17b0774b891ce2b0dd5dbe8f04132e547df384ab1053d32470050b5fa886040518082815260200191505060405180910390a15b612d67565b600160048111156129cd57fe5b6129d689610ed2565b60048111156129e157fe5b148015612a04575060086000898152602001908152602001600020600801548511155b15612cf957612a29600860008a81526020019081526020016000206008015486614999565b600860008a8152602001908152602001600020600801819055506008600089815260200190815260200160002060070160009054906101000a900460ff1615612ab557612a91600b60006001600a5403815260200190815260200160002060040154866149b2565b600b60006001600a5403815260200190815260200160002060040181905550612af7565b612af6600860008a815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163387614325565b5b612b20612b0634612710614983565b600560009054906101000a900461ffff1661ffff166149ce565b9150612b2c8783614999565b9050612bad60046000600860008c815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836149b2565b60046000600860008c815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612c9d600860008a815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860008b815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683614325565b6000600860008a8152602001908152602001600020600801541415612cf4577f5aa793a17b0774b891ce2b0dd5dbe8f04132e547df384ab1053d32470050b5fa886040518082815260200191505060405180910390a15b612d67565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e766573746d656e74206e6f7420636f6d706c69746564000000000000000081525060200191505060405180910390fd5b5050505050505050565b6000600754905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612dd657600080fd5b8060038190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612e3b57600080fd5b806127108161ffff161015612e6c5781600060176101000a81548161ffff021916908361ffff160217905550612eda565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f4e6f7420696e2072616e6765000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b6000600560009054906101000a900461ffff16905090565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600080600080600080600060075488101515612fd0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f57726f6e6720496400000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b612fd988610ed2565b600860008a815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860008b815260200190815260200160002060030154600860008c815260200190815260200160002060040154600860008d815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600860008e815260200190815260200160002060060154600860008f8152602001908152602001600020600801549650965096509650965096509650919395979092949650565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561311757600080fd5b80600560026101000a81548161ffff021916908361ffff16021790555050565b600080600080343360035482101515613956577f3a32cdd14cdfd431946dfa0b2aef5ace661340411aaadcaee6aef6738d3023268282604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a16007548710151561322e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f57726f6e6720706f6f6c2069640000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166008600089815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613308576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f506f6f6c206973206e6f7420666f72204554480000000000000000000000000081525060200191505060405180910390fd5b60c0604051908101604052808881526020013373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001613345336147ea565b151581526020016000815260200142815250600b6000600a5481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055506080820151816004015560a08201518160050155905050600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a549080600181540180825580915050906001820390600052602060002001600090919290919091505550613476600a5460016149b2565b600a8190555061349c34600860008a815260200190815260200160002060040154614983565b95506134be34600860008a815260200190815260200160002060030154614983565b9450600060048111156134cd57fe5b6134d688610ed2565b60048111156134e157fe5b1480156134f357506134f2336147ea565b5b8015613515575060086000888152602001908152602001600020600801548611155b156136da5761353a600860008981526020019081526020016000206008015487614999565b60086000898152602001908152602001600020600801819055506008600088815260200190815260200160002060070160009054906101000a900460ff16156135c6576135a2600b60006001600a5403815260200190815260200160002060040154876149b2565b600b60006001600a5403815260200190815260200160002060040181905550613608565b6136076008600089815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163388614325565b5b61363c61361734612710614983565b613637612710600060159054906101000a900461ffff1661ffff16614999565b6149ce565b935061367e6008600089815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685614a06565b6000600860008981526020019081526020016000206008015414156136d5577f5aa793a17b0774b891ce2b0dd5dbe8f04132e547df384ab1053d32470050b5fa876040518082815260200191505060405180910390a15b613951565b600160048111156136e757fe5b6136f088610ed2565b60048111156136fb57fe5b14801561371e575060086000888152602001908152602001600020600801548511155b156138e357613743600860008981526020019081526020016000206008015486614999565b60086000898152602001908152602001600020600801819055506008600088815260200190815260200160002060070160009054906101000a900460ff16156137cf576137ab600b60006001600a5403815260200190815260200160002060040154866149b2565b600b60006001600a5403815260200190815260200160002060040181905550613811565b6138106008600089815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163387614325565b5b61384561382034612710614983565b613840612710600560009054906101000a900461ffff1661ffff16614999565b6149ce565b92506138876008600089815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684614a06565b6000600860008981526020019081526020016000206008015414156138de577f5aa793a17b0774b891ce2b0dd5dbe8f04132e547df384ab1053d32470050b5fa876040518082815260200191505060405180910390a15b613951565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e766573746d656e74206e6f7420636f6d706c69746564000000000000000081525060200191505060405180910390fd5b6139c4565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f53656e642045544820746f20696e76657374000000000000000000000000000081525060200191505060405180910390fd5b50505050505050565b6000600354905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613a3257600080fd5b613a3b81614abc565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613a9957600080fd5b80600560006101000a81548161ffff021916908361ffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613b1457600080fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613bf657600080fd5b505af1158015613c0a573d6000803e3d6000fd5b505050506040513d6020811015613c2057600080fd5b8101908080519060200190929190505050506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600042600860008481526020019081526020016000206002015411158015613cb9575060006008600084815260200190815260200160002060080154115b8015613ce6575060086000838152602001908152602001600020600c0160009054906101000a900460ff16155b15613db057600160086000848152602001908152602001600020600c0160006101000a81548160ff021916908315150217905550613da76008600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008600086815260200190815260200160002060080154614325565b60019050613db5565b600090505b919050565b6000613dc588614bb6565b1515613e39576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4e6565642056616c696420455243323020546f6b656e0000000000000000000081525060200191505060405180910390fd5b86613e5842600560029054906101000a900461ffff1661ffff166149b2565b11151515613ece576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4e656564206d6f7265207468656e204d696e4475726174696f6e00000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480613f0e5750613f0d82612ef6565b5b1515613f1957600080fd5b848610151515613fb7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001807f504f5a20686f6c64657273206e65656420746f2068617665206265747465722081526020017f286f72207468652073616d65203d206f6666292070726963650000000000000081525060400191505060405180910390fd5b613fc28833866144a8565b84861461400957614004613ffe613ff6613fdc8a42614999565b600060179054906101000a900461ffff1661ffff166149ce565b612710614983565b426149b2565b61400b565b425b90506101a0604051908101604052808973ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018415158152602001858152602001428152602001828152602001600081526020016000151581525060086000600754815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006015560e08201518160070160006101000a81548160ff0219169083151502179055506101008201518160080155610120820151816009015561014082015181600a015561016082015181600b015561018082015181600c0160006101000a81548160ff021916908315150217905550905050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060075490806001815401808255809150509060018203906000526020600020016000909192909190915055507fbe4222bc407cb12031595fc55b46531e46308d31e4572c9c4360d8ae790e1a3188600754604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a161431560075460016149b2565b6007819055505050505050505050565b7fe4d818e6f992efbd60db553f3edce819a199baec79a784b95c89bc8ee86f2584818385604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a18273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561446757600080fd5b505af115801561447b573d6000803e3d6000fd5b505050506040513d602081101561449157600080fd5b810190808051906020019092919050505050505050565b828282808373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15801561457b57600080fd5b505af115801561458f573d6000803e3d6000fd5b505050506040513d60208110156145a557600080fd5b8101908080519060200190929190505050101515614774578573ffffffffffffffffffffffffffffffffffffffff166323b872dd8630876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561469457600080fd5b505af11580156146a8573d6000803e3d6000fd5b505050506040513d60208110156146be57600080fd5b8101908080519060200190929190505050507f1fecf4702e692891a7c2f0d328779b085efb5edd094fa5558bd5cd147a167922848688604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a16147e2565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4e6f20616c6c6f776e636500000000000000000000000000000000000000000081525060200191505060405180910390fd5b505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561484b576001905061497e565b60015461487a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684614c71565b10158061497b5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b217bb01836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561493f57600080fd5b505af1158015614953573d6000803e3d6000fd5b505050506040513d602081101561496957600080fd5b81019080805190602001909291905050505b90505b919050565b6000818381151561499057fe5b04905092915050565b60008282111515156149a757fe5b818303905092915050565b600081830190508281101515156149c557fe5b80905092915050565b6000808314156149e15760009050614a00565b81830290508183828115156149f257fe5b041415156149fc57fe5b8090505b92915050565b7feca5ae7bd9109b0f7d228f3f8a8cc834a1f995af62df6dc226dc3ab3f38dc7b38183604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a18173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015614ab7573d6000803e3d6000fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515614af857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000808273ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614c1d57600080fd5b505af1158015614c31573d6000803e3d6000fd5b505050506040513d6020811015614c4757600080fd5b81019080805190602001909291905050501115614c675760019050614c6c565b600090505b919050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015614d0e57600080fd5b505af1158015614d22573d6000803e3d6000fd5b505050506040513d6020811015614d3857600080fd5b81019080805190602001909291905050509050929150505600a165627a7a72305820990d7265199c0799f8ddb10302c9401184f7a56b72d94de2f999bf6e6153d5b50029",
  "sourceMap": "87:740:4:-;;;268:5:14;247:26;;;;;;;;;;;;;;;;;;;;575:10:16;567:5;;:18;;;;;;;;;;;;;;;;;;280:2:10;271:6;;:11;;;;;;;;;;;;;;;;;;314:4;303:8;;:15;;;;;;;;;;;;;;;;;;348:2;339:6;:11;;;;402:3;380:11;;:26;;;;;;;;;;;;;;;;;;173:5:1;162:8;;:16;;;;;;;;;;;;;;;;;;198:5;189:6;:14;;;;169:2:6;163:3;;:8;;;;;;;;;;;;;;;;;;206:1;192:11;;:15;;;;;;;;;;;;;;;;;;329:1:8;316:10;:14;;;;271:1:3;254:14;:18;;;;87:740:4;;;;;;",
  "deployedSourceMap": "87:740:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:8:1;;;;;;;;;;;529:9;525:23;;;540:8;;;525:23;87:740:4;489:150:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;489:150:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;976:86:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;976:86:10;;;;;;;;;;;;;;;;;;;;;;;;;;;2088:1953:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2088:1953:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;921:167:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;921:167:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1231:82:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1231:82:10;;;;;;;;;;;;;;;;;;;;;;;;;;;227:46:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;227:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:92:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:92:14;;;;;;754:76:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;754:76:6;;;;;;;;;;;;;;;;;;;;;;;;;;;4047:1981:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4047:1981:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;495:45:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;495:45:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;247:26:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:26:14;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:88:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1412:88:10;;;;;;;;;;;;;;;;;;;;;;;;;;739:84:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;739:84:1;;;;;;;;;;;;;;;;;;;;;;;;;;;215:102:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;215:102:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;215:102:9;;;;;;;;;;;;;;;;;1679:363;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1679:363:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:16;;;;;;666:90:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;666:90:14;;;;;;126:516:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;126:516:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;361:25:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;361:25:8;;;;;;;;;;;;;;;;;;;;;;;238:20:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:16;;;;;;;;;;;;;;;;;;;;;;;;;;;712:112:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;712:112:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;712:112:4;;;;;;;;;;;;;;;;;1096:178:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1096:178:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:83:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1321:83:10;;;;;;;;;;;;;;;;;;;;;;;337:144:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;337:144:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;831:105:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;831:105:1;;;;;;416:37:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;416:37:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4257:3910:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1576:91:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1576:91:8;;;;;;;;;;;;;;;;;;;;;;;1037:88:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1037:88:1;;;;;;;;;;;;;;;;;;;;;;;;;;1070:153:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1070:153:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;545:84:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;545:84:6;;;;;;;;;;;;;;;;;;;;;;;;;;;647:116:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;647:116:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1015:656:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1015:656:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;637:107:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;637:107:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;989:3260:3;;;;;;;;;;;;;;;;;;;;;;;;;;946:83:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;946:83:1;;;;;;;;;;;;;;;;;;;;;;;1274:103:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:75:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:75:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1282:168:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:581:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;386:581:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1700:1952:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1700:1952:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:150:5;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;567:23:5;583:6;567:23;;;;;;;;;;;;;;;;;;;;;;626:5;601:14;:22;616:6;601:22;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;489:150;:::o;976:86:10:-;1020:6;1046:8;;;;;;;;;;;1039:15;;976:86;:::o;2088:1953:9:-;2145:10;2182;;2176:3;:16;2168:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2304:5;:10;2310:3;2304:10;;;;;;;;;;;:21;;;2298:3;:27;:56;;;;;2353:1;2329:5;:10;2335:3;2329:10;;;;;;;;;;;:21;;;:25;2298:56;2294:163;;;2426:18;2418:27;;;;2294:163;2492:5;:10;2498:3;2492:10;;;;;;;;;;;:21;;;2485:3;:28;;:70;;;;;2554:1;2530:5;:10;2536:3;2530:10;;;;;;;;;;;:21;;;:25;2485:70;:114;;;;;2578:5;:10;2584:3;2578:10;;;;;;;;;;;:21;;;2572:3;:27;2485:114;2467:237;;;2676:15;2668:24;;;;2467:237;2757:1;2732:5;:10;2738:3;2732:10;;;;;;;;;;;:21;;;:26;:62;;;;;2775:5;:10;2781:3;2775:10;;;;;;;;;;;:19;;;;;;;;;;;;2732:62;:106;;;;;2817:5;:10;2823:3;2817:10;;;;;;;;;;;:21;;;2811:3;:27;2732:106;2714:239;;;2919:21;2911:30;;;;2714:239;3006:1;2981:5;:10;2987:3;2981:10;;;;;;;;;;;:21;;;:26;:50;;;;;3012:5;:10;3018:3;3012:10;;;;;;;;;;;:19;;;;;;;;;;;;3011:20;2981:50;2963:168;;;3102:16;3094:25;;;;2963:168;3183:1;3159:5;:10;3165:3;3159:10;;;;;;;;;;;:21;;;:25;:62;;;;;3202:5;:10;3208:3;3202:10;;;;;;;;;;;:19;;;;;;;;;;;;3201:20;3159:62;:104;;;;;3239:5;:10;3245:3;3239:10;;;;;;;;;;;:24;;;;;;;;;;;;3238:25;3159:104;3141:234;;;3343:19;3335:28;;;;3141:234;3396:5;:10;3402:3;3396:10;;;;;;;;;;;:21;;;3389:3;:28;;:52;;;;;3422:5;:10;3428:3;3422:10;;;;;;;;;;;:19;;;;;;;;;;;;3421:20;3389:52;3385:230;;;3509:5;:10;3515:3;3509:10;;;;;;;;;;;:24;;;;;;;;;;;;3505:55;;;3543:16;3535:25;;;;3505:55;3583:19;3575:28;;;;3385:230;3636:5;:10;3642:3;3636:10;;;;;;;;;;;:21;;;3629:3;:28;;:51;;;;;3661:5;:10;3667:3;3661:10;;;;;;;;;;;:19;;;;;;;;;;;;3629:51;3625:409;;;3764:5;:10;3770:3;3764:10;;;;;;;;;;;:24;;;;;;;;;;;;:54;;;;3817:1;3792:5;:10;3798:3;3792:10;;;;;;;;;;;:21;;;:26;3764:54;3763:175;;;;;3915:5;:10;3921:3;3915:10;;;;;;;;;;;:22;;;3869:5;:10;3875:3;3869:10;;;;;;;;;;;:21;;;3841:5;:10;3847:3;3841:10;;;;;;;;;;;:25;;;:49;:96;3763:175;3741:238;;;3962:16;3954:25;;;;3741:238;4002:19;3994:28;;;;3625:409;2088:1953;;;;:::o;921:167:6:-;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1012:4:6;783:5:10;772:8;:16;;;768:61;;;1040:4:6;1046:3;;;;;;;;;;;915:6:10;907:14;;:5;:14;;;904:56;;;1076:4:6;1067:6;;:13;;;;;;;;;;;;;;;;;;904:56:10;;;940:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;904:56;790:1;;768:61;;;807:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:61;731:1:16;921:167:6;:::o;1231:82:10:-;1273:6;1299;;;;;;;;;;;1292:13;;1231:82;:::o;227:46:5:-;;;;;;;;;;;;;;;;;;;;;;:::o;838:92:14:-;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;568:6:14;;;;;;;;;;;560:15;;;;;;;;900:5;891:6;;:14;;;;;;;;;;;;;;;;;;916:9;;;;;;;;;;838:92::o;754:76:6:-;793:6;819:3;;;;;;;;;;;812:10;;754:76;:::o;4047:1981:9:-;4108:10;4120:4;4151:10;;4145:3;:16;4137:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4273:5;:10;4279:3;4273:10;;;;;;;;;;;:21;;;4267:3;:27;:56;;;;;4322:1;4298:5;:10;4304:3;4298:10;;;;;;;;;;;:21;;;:25;4267:56;4263:165;;;4395:18;4414:1;4387:29;;;;;;;;;4263:165;4463:5;:10;4469:3;4463:10;;;;;;;;;;;:21;;;4456:3;:28;;:70;;;;;4525:1;4501:5;:10;4507:3;4501:10;;;;;;;;;;;:21;;;:25;4456:70;:114;;;;;4549:5;:10;4555:3;4549:10;;;;;;;;;;;:21;;;4543:3;:27;4456:114;4438:239;;;4647:15;4663:1;4639:26;;;;;;;;;4438:239;4730:1;4705:5;:10;4711:3;4705:10;;;;;;;;;;;:21;;;:26;:62;;;;;4748:5;:10;4754:3;4748:10;;;;;;;;;;;:19;;;;;;;;;;;;4705:62;:106;;;;;4790:5;:10;4796:3;4790:10;;;;;;;;;;;:21;;;4784:3;:27;4705:106;4687:241;;;4892:21;4914:1;4884:32;;;;;;;;;4687:241;4981:1;4956:5;:10;4962:3;4956:10;;;;;;;;;;;:21;;;:26;:50;;;;;4987:5;:10;4993:3;4987:10;;;;;;;;;;;:19;;;;;;;;;;;;4986:20;4956:50;4938:170;;;5077:16;5094:1;5069:27;;;;;;;;;4938:170;5160:1;5136:5;:10;5142:3;5136:10;;;;;;;;;;;:21;;;:25;:62;;;;;5179:5;:10;5185:3;5179:10;;;;;;;;;;;:19;;;;;;;;;;;;5178:20;5136:62;:104;;;;;5216:5;:10;5222:3;5216:10;;;;;;;;;;;:24;;;;;;;;;;;;5215:25;5136:104;5118:236;;;5320:19;5340:1;5312:30;;;;;;;;;5118:236;5375:5;:10;5381:3;5375:10;;;;;;;;;;;:21;;;5368:3;:28;;:52;;;;;5401:5;:10;5407:3;5401:10;;;;;;;;;;;:19;;;;;;;;;;;;5400:20;5368:52;5364:234;;;5488:5;:10;5494:3;5488:10;;;;;;;;;;;:24;;;;;;;;;;;;5484:57;;;5522:16;5539:1;5514:27;;;;;;;;;5484:57;5564:19;5584:1;5556:30;;;;;;;;;5364:234;5619:5;:10;5625:3;5619:10;;;;;;;;;;;:21;;;5612:3;:28;;:51;;;;;5644:5;:10;5650:3;5644:10;;;;;;;;;;;:19;;;;;;;;;;;;5612:51;5608:413;;;5747:5;:10;5753:3;5747:10;;;;;;;;;;;:24;;;;;;;;;;;;:54;;;;5800:1;5775:5;:10;5781:3;5775:10;;;;;;;;;;;:21;;;:26;5747:54;5746:175;;;;;5898:5;:10;5904:3;5898:10;;;;;;;;;;;:22;;;5852:5;:10;5858:3;5852:10;;;;;;;;;;;:21;;;5824:5;:10;5830:3;5824:10;;;;;;;;;;;:25;;;:49;:96;5746:175;5724:240;;;5945:16;5962:1;5937:27;;;;;;;;;5724:240;5987:19;6007:1;5979:30;;;;;;;;;5608:413;4047:1981;;;;:::o;495:45:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;247:26:14:-;;;;;;;;;;;;;:::o;1412:88:10:-;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1485:7:10;1476:6;:16;;;;1412:88;:::o;739:84:1:-;783:4;807:8;;;;;;;;;;;800:15;;739:84;:::o;215:102:9:-;260:9;289:8;:20;298:10;289:20;;;;;;;;;;;;;;;282:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;215:102;:::o;1679:363::-;1779:4;1798:7;1820;1842;1899:5;:10;1905:3;1899:10;;;;;;;;;;;:19;;;;;;;;;;;;1933:5;:10;1939:3;1933:10;;;;;;;;;;;:21;;;1969:5;:10;1975:3;1969:10;;;;;;;;;;;:21;;;2005:5;:10;2011:3;2005:10;;;;;;;;;;;:18;;;;;;;;;;;;1877:157;;;;;;;;1679:363;;;;;:::o;1001:111:16:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;666:90:14:-;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;416:6:14;;;;;;;;;;;415:7;407:16;;;;;;;;729:4;720:6;;:13;;;;;;;;;;;;;;;;;;744:7;;;;;;;;;;666:90::o;126:516:4:-;183:4;211:14;;204:3;:21;;:63;;;;;266:1;239:9;:14;249:3;239:14;;;;;;;;;;;:24;;;:28;204:63;:135;;;;;320:19;280:59;;;;;;;;:36;294:9;:14;304:3;294:14;;;;;;;;;;;:21;;;280:13;:36::i;:::-;:59;;;;;;;;;204:135;200:412;;;358:173;390:5;:28;396:9;:14;406:3;396:14;;;;;;;;;;;:21;;;390:28;;;;;;;;;;;:34;;;;;;;;;;;;443:9;:14;453:3;443:14;;;;;;;;;;;:30;;;;;;;;;;;;492:9;:14;502:3;492:14;;;;;;;;;;;:24;;;358:13;:173::i;:::-;573:1;546:9;:14;556:3;546:14;;;;;;;;;;;:24;;:28;;;;596:4;589:11;;;;200:412;629:5;622:12;;126:516;;;;:::o;361:25:8:-;;;;:::o;238:20:16:-;;;;;;;;;;;;;:::o;712:112:4:-;763:9;792:12;:24;805:10;792:24;;;;;;;;;;;;;;;785:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;712:112;:::o;1096:178:6:-;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1161:3:6;:12;;:35;1182:4;1174:21;;;1161:35;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1161:35:6;1096:178;:::o;1321:83:10:-;1363:7;1390:6;;1383:13;;1321:83;:::o;337:144:5:-;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;412:21:5;426:6;412:21;;;;;;;;;;;;;;;;;;;;;;469:4;444:14;:22;459:6;444:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;337:144;:::o;831:105:1:-;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;920:8:1;;;;;;;;;;;919:9;908:8;;:20;;;;;;;;;;;;;;;;;;831:105::o;416:37:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4257:3910:3:-;4960:20;5039;5946:14;6079:23;7396:21;7533:30;4358:10;;4348:7;:20;4340:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4454:3;4419:39;;:5;:14;4425:7;4419:14;;;;;;;;;;;:23;;;;;;;;;;;;:39;;;;4397:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4544:5;4534:7;:15;4526:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4592:59;4608:5;:14;4614:7;4608:14;;;;;;;;;;;:23;;;;;;;;;;;;4632:10;4643:7;4592:15;:59::i;:::-;4692:174;;;;;;;;;4715:7;4692:174;;;;4737:10;4692:174;;;;;;4762:7;4692:174;;;;4784:25;4798:10;4784:13;:25::i;:::-;4692:174;;;;;;4824:1;4692:174;;;;4840:15;4692:174;;;4664:9;:25;4674:14;;4664:25;;;;;;;;;;;:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4877:12;:24;4890:10;4877:24;;;;;;;;;;;;;;;4907:14;;4877:45;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4877:45:3;;;;;;;;;;;;;;;;;;;;;;4933:14;;:16;;;;;;;;;;;;;4983:45;4996:7;5005:5;:14;5011:7;5005:14;;;;;;;;;;;:22;;;4983:12;:45::i;:::-;4960:68;;5062:42;5075:7;5084:5;:14;5090:7;5084:14;;;;;;;;;;;:19;;;5062:12;:42::i;:::-;5039:65;;5159:18;5133:44;;;;;;;;:22;5147:7;5133:13;:22::i;:::-;:44;;;;;;;;;:86;;;;;5194:25;5208:10;5194:13;:25::i;:::-;5133:86;:169;;;;;5277:5;:14;5283:7;5277:14;;;;;;;;;;;:25;;;5261:12;:41;;5133:169;5115:2931;;;5425:102;5456:5;:14;5462:7;5456:14;;;;;;;;;;;:25;;;5500:12;5425;:102::i;:::-;5397:5;:14;5403:7;5397:14;;;;;;;;;;;:25;;:130;;;;5546:5;:14;5552:7;5546:14;;;;;;;;;;;:23;;;;;;;;;;;;5542:390;;;5631:128;5666:9;:29;5693:1;5676:14;;:18;5666:29;;;;;;;;;;;:39;;;5728:12;5631;:128::i;:::-;5589:9;:29;5616:1;5599:14;;:18;5589:29;;;;;;;;;;;:39;;:170;;;;5542:390;;;5855:61;5869:5;:14;5875:7;5869:14;;;;;;;;;;;:20;;;;;;;;;;;;5891:10;5903:12;5855:13;:61::i;:::-;5542:390;5963:101;5994:30;6007:9;6018:5;5994:12;:30::i;:::-;6043:6;;;;;;;;;;;5963:101;;:12;:101::i;:::-;5946:118;;6105:30;6118:7;6128:6;6105:12;:30::i;:::-;6079:56;;6184:53;6197:6;:31;6204:5;:14;6210:7;6204:14;;;;;;;;;;;:23;;;;;;;;;;;;6197:31;;;;;;;;;;;;;;;;6230:6;6184:12;:53::i;:::-;6150:6;:31;6157:5;:14;6163:7;6157:14;;;;;;;;;;;:23;;;;;;;;;;;;6150:31;;;;;;;;;;;;;;;:87;;;;6319:145;6351:5;:14;6357:7;6351:14;;;;;;;;;;;:23;;;;;;;;;;;;6393:5;:14;6399:7;6393:14;;;;;;;;;;;:22;;;;;;;;;;;;6434:15;6319:13;:145::i;:::-;6571:1;6542:5;:14;6548:7;6542:14;;;;;;;;;;;:25;;;:30;6538:60;;;6579:19;6590:7;6579:19;;;;;;;;;;;;;;;;;;6538:60;6613:7;;5115:2931;6681:15;6655:41;;;;;;;;:22;6669:7;6655:13;:22::i;:::-;:41;;;;;;;;;:99;;;;;6729:5;:14;6735:7;6729:14;;;;;;;;;;;:25;;;6713:12;:41;;6655:99;6637:1409;;;6872:102;6903:5;:14;6909:7;6903:14;;;;;;;;;;;:25;;;6947:12;6872;:102::i;:::-;6846:5;:14;6852:7;6846:14;;;;;;;;;;;:25;;:128;;;;6994:5;:14;7000:7;6994:14;;;;;;;;;;;:23;;;;;;;;;;;;6990:392;;;7079:128;7114:9;:29;7141:1;7124:14;;:18;7114:29;;;;;;;;;;;:39;;;7176:12;7079;:128::i;:::-;7037:9;:29;7064:1;7047:14;;:18;7037:29;;;;;;;;;;;:39;;:170;;;;6990:392;;;7305:61;7319:5;:14;7325:7;7319:14;;;;;;;;;;;:20;;;;;;;;;;;;7341:10;7353:12;7305:13;:61::i;:::-;6990:392;7420:98;7451:30;7464:9;7475:5;7451:12;:30::i;:::-;7500:3;;;;;;;;;;;7420:98;;:12;:98::i;:::-;7396:122;;7566:37;7579:7;7589:13;7566:12;:37::i;:::-;7533:70;;7652:60;7665:6;:31;7672:5;:14;7678:7;7672:14;;;;;;;;;;;:23;;;;;;;;;;;;7665:31;;;;;;;;;;;;;;;;7698:13;7652:12;:60::i;:::-;7618:6;:31;7625:5;:14;7631:7;7625:14;;;;;;;;;;;:23;;;;;;;;;;;;7618:31;;;;;;;;;;;;;;;:94;;;;7727:152;7759:5;:14;7765:7;7759:14;;;;;;;;;;;:23;;;;;;;;;;;;7801:5;:14;7807:7;7801:14;;;;;;;;;;;:22;;;;;;;;;;;;7842;7727:13;:152::i;:::-;7986:1;7957:5;:14;7963:7;7957:14;;;;;;;;;;;:25;;;:30;7953:60;;;7994:19;8005:7;7994:19;;;;;;;;;;;;;;;;;;7953:60;8028:7;;6637:1409;8125:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4257:3910;;;;;;;;;:::o;1576:91:8:-;1622:7;1649:10;;1642:17;;1576:91;:::o;1037:88:1:-;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1110:7:1;1101:6;:16;;;;1037:88;:::o;1070:153:10:-;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1168:9:10;783:5;772:8;:16;;;768:61;;;1206:9;1195:8;;:20;;;;;;;;;;;;;;;;;;768:61;;;807:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:61;731:1:16;1070:153:10;:::o;545:84:6:-;592:6;618:3;;;;;;;;;;;611:10;;545:84;:::o;647:116:5:-;709:4;733:14;:22;748:6;733:22;;;;;;;;;;;;;;;;;;;;;;;;;726:29;;647:116;;;:::o;1015:656:9:-;1111:10;1136:7;1158;1180;1202;1224;1246;1295:10;;1289:3;:16;1281:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1410:3;1396:13;:18::i;:::-;1429:5;:10;1435:3;1429:10;;;;;;;;;;;:16;;;;;;;;;;;;1460:5;:10;1466:3;1460:10;;;;;;;;;;;:15;;;1490:5;:10;1496:3;1490:10;;;;;;;;;;;:18;;;1523:5;:10;1529:3;1523:10;;;;;;;;;;;:19;;;;;;;;;;;;1594:5;:10;1600:3;1594:10;;;;;;;;;;;:22;;;1631:5;:10;1637:3;1631:10;;;;;;;;;;;:21;;;1329:334;;;;;;;;;;;;;;1015:656;;;;;;;;;:::o;637:107:6:-;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;724:12:6;710:11;;:26;;;;;;;;;;;;;;;;;;637:107;:::o;989:3260:3:-;1586:20;1667;2552:22;3708:19;1079:9;1090:10;298:6:1;;285:8;:19;;281:145;;;326:33;340:8;349:9;326:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;1136:10:3;;1126:7;:20;1118:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1218:3;1183:39;;:5;:14;1189:7;1183:14;;;;;;;;;;;:23;;;;;;;;;;;;:39;;;1175:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1285:176;;;;;;;;;1308:7;1285:176;;;;1330:10;1285:176;;;;;;1355:9;1285:176;;;;1379:25;1393:10;1379:13;:25::i;:::-;1285:176;;;;;;1419:1;1285:176;;;;1435:15;1285:176;;;1257:9;:25;1267:14;;1257:25;;;;;;;;;;;:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1472:12;:24;1485:10;1472:24;;;;;;;;;;;;;;;1502:14;;1472:45;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1472:45:3;;;;;;;;;;;;;;;;;;;;;;1545:30;1558:14;;1573:1;1545:12;:30::i;:::-;1528:14;:47;;;;1609;1622:9;1633:5;:14;1639:7;1633:14;;;;;;;;;;;:22;;;1609:12;:47::i;:::-;1586:70;;1690:44;1703:9;1714:5;:14;1720:7;1714:14;;;;;;;;;;;:19;;;1690:12;:44::i;:::-;1667:67;;1789:18;1763:44;;;;;;;;:22;1777:7;1763:13;:22::i;:::-;:44;;;;;;;;;:86;;;;;1824:25;1838:10;1824:13;:25::i;:::-;1763:86;:144;;;;;1882:5;:14;1888:7;1882:14;;;;;;;;;;;:25;;;1866:12;:41;;1763:144;1745:2383;;;2030:102;2061:5;:14;2067:7;2061:14;;;;;;;;;;;:25;;;2105:12;2030;:102::i;:::-;2002:5;:14;2008:7;2002:14;;;;;;;;;;;:25;;:130;;;;2151:5;:14;2157:7;2151:14;;;;;;;;;;;:23;;;;;;;;;;;;2147:391;;;2237:128;2272:9;:29;2299:1;2282:14;;:18;2272:29;;;;;;;;;;;:39;;;2334:12;2237;:128::i;:::-;2195:9;:29;2222:1;2205:14;;:18;2195:29;;;;;;;;;;;:39;;:170;;;;2147:391;;;2461:61;2475:5;:14;2481:7;2475:14;;;;;;;;;;;:20;;;;;;;;;;;;2497:10;2509:12;2461:13;:61::i;:::-;2147:391;2577:122;2608:30;2621:9;2632:5;2608:12;:30::i;:::-;2657:27;2670:5;2677:6;;;;;;;;;;;2657:27;;:12;:27::i;:::-;2577:12;:122::i;:::-;2552:147;;2714:51;2726:5;:14;2732:7;2726:14;;;;;;;;;;;:22;;;;;;;;;;;;2750:14;2714:11;:51::i;:::-;2872:1;2843:5;:14;2849:7;2843:14;;;;;;;;;;;:25;;;:30;2839:60;;;2880:19;2891:7;2880:19;;;;;;;;;;;;;;;;;;2839:60;2914:7;;1745:2383;2991:15;2965:41;;;;;;;;:22;2979:7;2965:13;:22::i;:::-;:41;;;;;;;;;:99;;;;;3039:5;:14;3045:7;3039:14;;;;;;;;;;;:25;;;3023:12;:41;;2965:99;2947:1181;;;3183:102;3214:5;:14;3220:7;3214:14;;;;;;;;;;;:25;;;3258:12;3183;:102::i;:::-;3156:5;:14;3162:7;3156:14;;;;;;;;;;;:25;;:129;;;;3305:5;:14;3311:7;3305:14;;;;;;;;;;;:23;;;;;;;;;;;;3301:393;;;3391:128;3426:9;:29;3453:1;3436:14;;:18;3426:29;;;;;;;;;;;:39;;;3488:12;3391;:128::i;:::-;3349:9;:29;3376:1;3359:14;;:18;3349:29;;;;;;;;;;;:39;;:170;;;;3301:393;;;3617:61;3631:5;:14;3637:7;3631:14;;;;;;;;;;;:20;;;;;;;;;;;;3653:10;3665:12;3617:13;:61::i;:::-;3301:393;3730:119;3761:30;3774:9;3785:5;3761:12;:30::i;:::-;3810:24;3823:5;3830:3;;;;;;;;;;;3810:24;;:12;:24::i;:::-;3730:12;:119::i;:::-;3708:141;;3864:97;3894:5;:14;3900:7;3894:14;;;;;;;;;;;:22;;;;;;;;;;;;3935:11;3864;:97::i;:::-;4068:1;4039:5;:14;4045:7;4039:14;;;;;;;;;;;:25;;;:30;4035:60;;;4076:19;4087:7;4076:19;;;;;;;;;;;;;;;;;;4035:60;4110:7;;2947:1181;4207:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;370:1:1;281:145;;;398:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:145;989:3260:3;;;;;;;:::o;946:83:1:-;988:7;1015:6;;1008:13;;946:83;:::o;1274:103:16:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;838:75:6:-;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;901:4:6;895:3;;:10;;;;;;;;;;;;;;;;;;838:75;:::o;1282:168::-;719:5:16;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1375:6:6;1369:22;;;1392:3;1397:6;:14;1404:6;1397:14;;;;;;;;;;;;;;;;1369:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1369:43:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1369:43:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1369:43:6;;;;;;;;;;;;;;;;;1440:1;1423:6;:14;1430:6;1423:14;;;;;;;;;;;;;;;:18;;;;1282:168;;:::o;386:581:9:-;446:4;575:3;546:5;:14;552:7;546:14;;;;;;;;;;;:25;;;:32;;:78;;;;;623:1;595:5;:14;601:7;595:14;;;;;;;;;;;:25;;;:29;546:78;:124;;;;;642:5;:14;648:7;642:14;;;;;;;;;;;:28;;;;;;;;;;;;641:29;546:124;528:409;;;728:4;697:5;:14;703:7;697:14;;;;;;;;;;;:28;;;:35;;;;;;;;;;;;;;;;;;747:152;779:5;:14;785:7;779:14;;;;;;;;;;;:20;;;;;;;;;;;;818:5;:14;824:7;818:14;;;;;;;;;;;:22;;;;;;;;;;;;859:5;:14;865:7;859:14;;;;;;;;;;;:25;;;747:13;:152::i;:::-;921:4;914:11;;;;528:409;954:5;947:12;;386:581;;;;:::o;1700:1952:8:-;2688:18;2179:15;2187:6;2179:7;:15::i;:::-;2171:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2315:11;2281:30;2294:3;2299:11;;;;;;;;;;;2281:30;;:12;:30::i;:::-;:45;;2259:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:3;2426:25;;:9;:25;;;:55;;;;2455:26;2471:9;2455:15;:26::i;:::-;2426:55;2418:64;;;;;;;;2524:8;2515:5;:17;;2493:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2628:49;2644:6;2652:10;2664:12;2628:15;:49::i;:::-;2719:8;2710:5;:17;2709:367;;2775:301;2806:221;2841:139;2880:42;2893:11;2906:15;2880:12;:42::i;:::-;2949:8;;;;;;;;;;;2841:139;;:12;:139::i;:::-;3003:5;2806:12;:221::i;:::-;3046:15;2775:12;:301::i;:::-;2709:367;;;2744:15;2709:367;2688:388;;3136:323;;;;;;;;;3155:6;3136:323;;;;;;3176:10;3136:323;;;;;;3201:11;3136:323;;;;3227:5;3136:323;;;;3247:8;3136:323;;;;3270:9;3136:323;;;;;;3294:12;3136:323;;;;3321:9;3136:323;;;;;;3345:12;3136:323;;;;3372:15;3136:323;;;;3402:10;3136:323;;;;3427:1;3136:323;;;;3443:5;3136:323;;;;;3116:5;:17;3122:10;;3116:17;;;;;;;;;;;:343;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3470:8;:20;3479:10;3470:20;;;;;;;;;;;;;;;3496:10;;3470:37;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3470:37:8;;;;;;;;;;;;;;;;;;;;;;3523:27;3531:6;3539:10;;3523:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;3574:26;3587:10;;3598:1;3574:12;:26::i;:::-;3561:10;:39;;;;1700:1952;;;;;;;;:::o;527:234:0:-;661:39;673:8;683;693:6;661:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;717:6;711:22;;;734:8;744;711:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;711:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;711:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;711:42:0;;;;;;;;;;;;;;;;;527:234;;;:::o;921:253::-;1017:6;1024:8;1033:7;463;419:6;413:23;;;437:6;453:4;413:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;413:46:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;413:46:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;413:46:0;;;;;;;;;;;;;;;;:57;;409:101;;;1059:6;1053:26;;;1080:8;1098:4;1105:7;1053:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1053:60:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1053:60:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1053:60:0;;;;;;;;;;;;;;;;;1129:37;1140:7;1149:8;1159:6;1129:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:101;;;489:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:101;921:253;;;;;;:::o;1569:302:10:-;1634:4;1678:3;1655:27;;:11;;;;;;;;;;;:27;;;1651:44;;;1691:4;1684:11;;;;1651:44;1805:6;;1766:35;1779:11;;;;;;;;;;;1791:9;1766:12;:35::i;:::-;:45;;:96;;;;1827:11;;;;;;;;;;;1815:36;;;1852:9;1815:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1815:47:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1815:47:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1815:47:10;;;;;;;;;;;;;;;;1766:96;1758:105;;1569:302;;;;:::o;665:283:15:-;725:7;941:2;936;:7;;;;;;;;929:14;;665:283;;;;:::o;1060:116::-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;1238:128::-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;203:380::-;263:9;495:1;489:2;:7;485:36;;;513:1;506:8;;;;485:36;536:2;531;:7;527:11;;561:2;555;551:1;:6;;;;;;;;:12;544:20;;;;;;577:1;570:8;;203:380;;;;;:::o;1133:162:1:-;1215:34;1230:8;1240;1215:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;1260:8;:17;;:27;1278:8;1260:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1260:27:1;1133:162;;:::o;1512:171:16:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;1180:172:0:-;1246:4;1307:1;1273:16;1267:35;;;:37;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1267:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1267:37:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1267:37:0;;;;;;;;;;;;;;;;:41;1263:58;;;1317:4;1310:11;;;;1263:58;1339:5;1332:12;;1180:172;;;;:::o;768:147::-;845:7;880:6;874:23;;;898:8;874:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;874:33:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;874:33:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;874:33:0;;;;;;;;;;;;;;;;867:40;;768:147;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.4.24;\r\n\r\nimport \"./Invest.sol\";\r\n\r\ncontract InvestorData is Invest {\r\n    function WithdrawInvestment(uint256 _id) public returns (bool) {\r\n        if (_id <= TotalInvestors &&\r\n         Investors[_id].TokensOwn > 0 &&\r\n        GetPoolStatus(Investors[_id].Poolid) == PoolStatus.Finished  ) {\r\n            TransferToken(\r\n                pools[Investors[_id].Poolid].Token,\r\n                Investors[_id].InvestorAddress,\r\n                Investors[_id].TokensOwn\r\n            );\r\n            Investors[_id].TokensOwn = 0;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //Give all the id's of the investment  by sender address\r\n    function GetMyInvestmentIds() public view returns (uint256[]) {\r\n        return InvestorsMap[msg.sender];\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Administrator\\Desktop\\Code\\Poolz\\contracts\\InvestorData.sol",
  "ast": {
    "absolutePath": "/C/Users/Administrator/Desktop/Code/Poolz/contracts/InvestorData.sol",
    "exportedSymbols": {
      "InvestorData": [
        1047
      ]
    },
    "id": 1048,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 972,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:4"
      },
      {
        "absolutePath": "/C/Users/Administrator/Desktop/Code/Poolz/contracts/Invest.sol",
        "file": "./Invest.sol",
        "id": 973,
        "nodeType": "ImportDirective",
        "scope": 1048,
        "sourceUnit": 971,
        "src": "61:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 974,
              "name": "Invest",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 970,
              "src": "112:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Invest_$970",
                "typeString": "contract Invest"
              }
            },
            "id": 975,
            "nodeType": "InheritanceSpecifier",
            "src": "112:6:4"
          }
        ],
        "contractDependencies": [
          138,
          262,
          970,
          1113,
          1251,
          1489,
          2073,
          2225,
          2570,
          2750
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1047,
        "linearizedBaseContracts": [
          1047,
          970,
          2073,
          1489,
          1113,
          1251,
          262,
          2225,
          138,
          2570,
          2750
        ],
        "name": "InvestorData",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1033,
              "nodeType": "Block",
              "src": "189:453:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 982,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 977,
                          "src": "204:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 983,
                          "name": "TotalInvestors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "211:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "204:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 985,
                              "name": "Investors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "239:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investor_$310_storage_$",
                                "typeString": "mapping(uint256 => struct Invest.Investor storage ref)"
                              }
                            },
                            "id": 987,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 986,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "249:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "239:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$310_storage",
                              "typeString": "struct Invest.Investor storage ref"
                            }
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "TokensOwn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 307,
                          "src": "239:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "266:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "239:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "204:63:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_PoolStatus_$1500",
                        "typeString": "enum PoolsData.PoolStatus"
                      },
                      "id": 1000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 993,
                                "name": "Investors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 292,
                                "src": "294:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investor_$310_storage_$",
                                  "typeString": "mapping(uint256 => struct Invest.Investor storage ref)"
                                }
                              },
                              "id": 995,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 994,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 977,
                                "src": "304:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "294:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$310_storage",
                                "typeString": "struct Invest.Investor storage ref"
                              }
                            },
                            "id": 996,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Poolid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 299,
                            "src": "294:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 992,
                          "name": "GetPoolStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1858,
                          "src": "280:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_PoolStatus_$1500_$",
                            "typeString": "function (uint256) view returns (enum PoolsData.PoolStatus)"
                          }
                        },
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "280:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolStatus_$1500",
                          "typeString": "enum PoolsData.PoolStatus"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 998,
                          "name": "PoolStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1500,
                          "src": "320:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PoolStatus_$1500_$",
                            "typeString": "type(enum PoolsData.PoolStatus)"
                          }
                        },
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Finished",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "320:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolStatus_$1500",
                          "typeString": "enum PoolsData.PoolStatus"
                        }
                      },
                      "src": "280:59:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "204:135:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1030,
                  "nodeType": "IfStatement",
                  "src": "200:412:4",
                  "trueBody": {
                    "id": 1029,
                    "nodeType": "Block",
                    "src": "343:269:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1003,
                                  "name": "pools",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1314,
                                  "src": "390:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$1346_storage_$",
                                    "typeString": "mapping(uint256 => struct Pools.Pool storage ref)"
                                  }
                                },
                                "id": 1008,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1004,
                                      "name": "Investors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 292,
                                      "src": "396:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investor_$310_storage_$",
                                        "typeString": "mapping(uint256 => struct Invest.Investor storage ref)"
                                      }
                                    },
                                    "id": 1006,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1005,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 977,
                                      "src": "406:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "396:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Investor_$310_storage",
                                      "typeString": "struct Invest.Investor storage ref"
                                    }
                                  },
                                  "id": 1007,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "Poolid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 299,
                                  "src": "396:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "390:28:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pool_$1346_storage",
                                  "typeString": "struct Pools.Pool storage ref"
                                }
                              },
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1321,
                              "src": "390:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1010,
                                  "name": "Investors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 292,
                                  "src": "443:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investor_$310_storage_$",
                                    "typeString": "mapping(uint256 => struct Invest.Investor storage ref)"
                                  }
                                },
                                "id": 1012,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1011,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 977,
                                  "src": "453:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "443:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Investor_$310_storage",
                                  "typeString": "struct Invest.Investor storage ref"
                                }
                              },
                              "id": 1013,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "InvestorAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 301,
                              "src": "443:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1014,
                                  "name": "Investors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 292,
                                  "src": "492:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investor_$310_storage_$",
                                    "typeString": "mapping(uint256 => struct Invest.Investor storage ref)"
                                  }
                                },
                                "id": 1016,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1015,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 977,
                                  "src": "502:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "492:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Investor_$310_storage",
                                  "typeString": "struct Invest.Investor storage ref"
                                }
                              },
                              "id": 1017,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "TokensOwn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 307,
                              "src": "492:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1002,
                            "name": "TransferToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "358:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "358:173:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1019,
                        "nodeType": "ExpressionStatement",
                        "src": "358:173:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1020,
                                "name": "Investors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 292,
                                "src": "546:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investor_$310_storage_$",
                                  "typeString": "mapping(uint256 => struct Invest.Investor storage ref)"
                                }
                              },
                              "id": 1022,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1021,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 977,
                                "src": "556:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "546:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$310_storage",
                                "typeString": "struct Invest.Investor storage ref"
                              }
                            },
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "TokensOwn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 307,
                            "src": "546:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "573:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "546:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1026,
                        "nodeType": "ExpressionStatement",
                        "src": "546:28:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "596:4:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 981,
                        "id": 1028,
                        "nodeType": "Return",
                        "src": "589:11:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "629:5:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 981,
                  "id": 1032,
                  "nodeType": "Return",
                  "src": "622:12:4"
                }
              ]
            },
            "documentation": null,
            "id": 1034,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "WithdrawInvestment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 977,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1034,
                  "src": "154:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "154:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "153:13:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1034,
                  "src": "183:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "182:6:4"
            },
            "scope": 1047,
            "src": "126:516:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1045,
              "nodeType": "Block",
              "src": "774:50:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1040,
                      "name": "InvestorsMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "792:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 1043,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1041,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "805:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "805:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "792:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1039,
                  "id": 1044,
                  "nodeType": "Return",
                  "src": "785:31:4"
                }
              ]
            },
            "documentation": null,
            "id": 1046,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "GetMyInvestmentIds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1038,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "763:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1036,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "763:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1037,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "763:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "762:11:4"
            },
            "scope": 1047,
            "src": "712:112:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1048,
        "src": "87:740:4"
      }
    ],
    "src": "33:796:4"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Administrator/Desktop/Code/Poolz/contracts/InvestorData.sol",
    "exportedSymbols": {
      "InvestorData": [
        1047
      ]
    },
    "id": 1048,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 972,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:4"
      },
      {
        "absolutePath": "/C/Users/Administrator/Desktop/Code/Poolz/contracts/Invest.sol",
        "file": "./Invest.sol",
        "id": 973,
        "nodeType": "ImportDirective",
        "scope": 1048,
        "sourceUnit": 971,
        "src": "61:22:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 974,
              "name": "Invest",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 970,
              "src": "112:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Invest_$970",
                "typeString": "contract Invest"
              }
            },
            "id": 975,
            "nodeType": "InheritanceSpecifier",
            "src": "112:6:4"
          }
        ],
        "contractDependencies": [
          138,
          262,
          970,
          1113,
          1251,
          1489,
          2073,
          2225,
          2570,
          2750
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1047,
        "linearizedBaseContracts": [
          1047,
          970,
          2073,
          1489,
          1113,
          1251,
          262,
          2225,
          138,
          2570,
          2750
        ],
        "name": "InvestorData",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1033,
              "nodeType": "Block",
              "src": "189:453:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 982,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 977,
                          "src": "204:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 983,
                          "name": "TotalInvestors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "211:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "204:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 985,
                              "name": "Investors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "239:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investor_$310_storage_$",
                                "typeString": "mapping(uint256 => struct Invest.Investor storage ref)"
                              }
                            },
                            "id": 987,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 986,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "249:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "239:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Investor_$310_storage",
                              "typeString": "struct Invest.Investor storage ref"
                            }
                          },
                          "id": 988,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "TokensOwn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 307,
                          "src": "239:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "266:1:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "239:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "204:63:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_PoolStatus_$1500",
                        "typeString": "enum PoolsData.PoolStatus"
                      },
                      "id": 1000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 993,
                                "name": "Investors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 292,
                                "src": "294:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investor_$310_storage_$",
                                  "typeString": "mapping(uint256 => struct Invest.Investor storage ref)"
                                }
                              },
                              "id": 995,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 994,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 977,
                                "src": "304:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "294:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$310_storage",
                                "typeString": "struct Invest.Investor storage ref"
                              }
                            },
                            "id": 996,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Poolid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 299,
                            "src": "294:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 992,
                          "name": "GetPoolStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1858,
                          "src": "280:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_PoolStatus_$1500_$",
                            "typeString": "function (uint256) view returns (enum PoolsData.PoolStatus)"
                          }
                        },
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "280:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolStatus_$1500",
                          "typeString": "enum PoolsData.PoolStatus"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 998,
                          "name": "PoolStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1500,
                          "src": "320:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PoolStatus_$1500_$",
                            "typeString": "type(enum PoolsData.PoolStatus)"
                          }
                        },
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Finished",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "320:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PoolStatus_$1500",
                          "typeString": "enum PoolsData.PoolStatus"
                        }
                      },
                      "src": "280:59:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "204:135:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1030,
                  "nodeType": "IfStatement",
                  "src": "200:412:4",
                  "trueBody": {
                    "id": 1029,
                    "nodeType": "Block",
                    "src": "343:269:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1003,
                                  "name": "pools",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1314,
                                  "src": "390:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$1346_storage_$",
                                    "typeString": "mapping(uint256 => struct Pools.Pool storage ref)"
                                  }
                                },
                                "id": 1008,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1004,
                                      "name": "Investors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 292,
                                      "src": "396:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investor_$310_storage_$",
                                        "typeString": "mapping(uint256 => struct Invest.Investor storage ref)"
                                      }
                                    },
                                    "id": 1006,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1005,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 977,
                                      "src": "406:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "396:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Investor_$310_storage",
                                      "typeString": "struct Invest.Investor storage ref"
                                    }
                                  },
                                  "id": 1007,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "Poolid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 299,
                                  "src": "396:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "390:28:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pool_$1346_storage",
                                  "typeString": "struct Pools.Pool storage ref"
                                }
                              },
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1321,
                              "src": "390:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1010,
                                  "name": "Investors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 292,
                                  "src": "443:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investor_$310_storage_$",
                                    "typeString": "mapping(uint256 => struct Invest.Investor storage ref)"
                                  }
                                },
                                "id": 1012,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1011,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 977,
                                  "src": "453:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "443:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Investor_$310_storage",
                                  "typeString": "struct Invest.Investor storage ref"
                                }
                              },
                              "id": 1013,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "InvestorAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 301,
                              "src": "443:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1014,
                                  "name": "Investors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 292,
                                  "src": "492:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investor_$310_storage_$",
                                    "typeString": "mapping(uint256 => struct Invest.Investor storage ref)"
                                  }
                                },
                                "id": 1016,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1015,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 977,
                                  "src": "502:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "492:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Investor_$310_storage",
                                  "typeString": "struct Invest.Investor storage ref"
                                }
                              },
                              "id": 1017,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "TokensOwn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 307,
                              "src": "492:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1002,
                            "name": "TransferToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "358:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "358:173:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1019,
                        "nodeType": "ExpressionStatement",
                        "src": "358:173:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1020,
                                "name": "Investors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 292,
                                "src": "546:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investor_$310_storage_$",
                                  "typeString": "mapping(uint256 => struct Invest.Investor storage ref)"
                                }
                              },
                              "id": 1022,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1021,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 977,
                                "src": "556:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "546:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Investor_$310_storage",
                                "typeString": "struct Invest.Investor storage ref"
                              }
                            },
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "TokensOwn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 307,
                            "src": "546:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "573:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "546:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1026,
                        "nodeType": "ExpressionStatement",
                        "src": "546:28:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "596:4:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 981,
                        "id": 1028,
                        "nodeType": "Return",
                        "src": "589:11:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "629:5:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 981,
                  "id": 1032,
                  "nodeType": "Return",
                  "src": "622:12:4"
                }
              ]
            },
            "documentation": null,
            "id": 1034,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "WithdrawInvestment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 977,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1034,
                  "src": "154:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "154:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "153:13:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1034,
                  "src": "183:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "182:6:4"
            },
            "scope": 1047,
            "src": "126:516:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1045,
              "nodeType": "Block",
              "src": "774:50:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1040,
                      "name": "InvestorsMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "792:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 1043,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1041,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "805:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "805:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "792:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1039,
                  "id": 1044,
                  "nodeType": "Return",
                  "src": "785:31:4"
                }
              ]
            },
            "documentation": null,
            "id": 1046,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "GetMyInvestmentIds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "739:2:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1038,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "763:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1036,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "763:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1037,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "763:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "762:11:4"
            },
            "scope": 1047,
            "src": "712:112:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1048,
        "src": "87:740:4"
      }
    ],
    "src": "33:796:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-06T15:00:04.367Z",
  "devdoc": {
    "methods": {
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}